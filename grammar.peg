// Author: Jeeyoung Kim
// PEG grammar file.
// select COLUMNS where
// X = VALUE
// Y IN (VALUES)
// , for AND

{
  # helper functions
}

// language for querying metric definition/
// naming conventions
// statements - top level
// expr - sublevel.
// list - anything that homogenous list of things.
// literal - anything that resolves to regex.

start = SHOW_STATEMENT / SELECT_STATEMENT

SELECT_STATEMENT =
  "SELECT"i _
  COMPUTE_EXPR_LIST _
  PREDICATE_EXPR? _
  GROUP_EXPR? _
  RANGE_EXPR? _
  SAMPLE_EXPR?

COMPUTE_EXPR_LIST = COMPUTE_EXPR (_ "," _ COMPUTE_EXPR)*

COMPUTE_EXPR = COMPUTE_ADD_EXPR

COMPUTE_ADD_EXPR =
  COMPUTE_MULT_EXPR _ [+-] _ COMPUTE_ADD_EXPR /
  COMPUTE_MULT_EXPR

COMPUTE_MULT_EXPR =
  COMPUTE_SINGLE_EXPR _ [*/] _ COMPUTE_MULT_EXPR /
  COMPUTE_SINGLE_EXPR

COMPUTE_SINGLE_EXPR =
  FUNCTION_LITERAL _ "(" _ COMPUTE_EXPR_LIST _ ")" /
  "(" COMPUTE_ADD_EXPR ")" /
  VARIABLE_LITERAL

GROUP_EXPR = "GROUP"i _ "BY"i _ COLUMN_LIST

RANGE_EXPR = "RANGE"i _ "(" _ TIME_EXPR _ "," _ TIME_EXPR _ ")"

SAMPLE_EXPR = "SAMPLE"i _ "TO"i _ RESOLUTION_EXPR _ "BY"i _ SAMPLER_LITERAL

RESOLUTION_EXPR = [0-9]+ _ DURATION_UNIT_LITERAL

TIME_EXPR = "?" / STRING_LITERAL // todo

FUNCTION_LITERAL = [a-z]+

VARIABLE_LITERAL = [a-zA-Z0-9.]+

SHOW_STATEMENT =  "SHOW"i _ COLUMN_LIST _ PREDICATE_EXPR?

COLUMN_LIST = COLUMN (_ "," _ COLUMN)*

COLUMN = "*" / COLUMN_LITERAL

COLUMN_LITERAL = [a-zA-Z0-9.]+

PREDICATE_EXPR = "WHERE"i _ PREDICATES

PREDICATES = (PREDICATE _ "," _ PREDICATES) / PREDICATE

PREDICATE =
  COLUMN_LITERAL _ "=" _ VALUE_LITERAL /
  COLUMN_LITERAL _ "IN"i _ "(" _ VALUE_LIST _ ")"

VALUE_LIST = VALUE_LITERAL (_ "," _ VALUE_LITERAL)*

VALUE_LITERAL = STRING_LITERAL

NUMBER_LITERAL = [0-9]+ / ([0-9]+ "." [0-9]+)

STRING_LITERAL =
  ('"' ([^"])* '"') /
  ("'" ([^'])* "'") /
  ([a-zA-Z0-9.]+)

DURATION_UNIT_LITERAL = "minute"i / "hour"i / "day"i

SAMPLER_LITERAL = "min"i/ "max"i/ "sum"i / "mean"i


// represents ignorable whitespace.
_ = [ ]*
